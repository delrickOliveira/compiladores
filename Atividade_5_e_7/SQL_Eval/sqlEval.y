/*
	SQL Validator
	Delrick de Oliveira Freitas 
*/

%{
#define YYSTYPE double
#include <stdio.h>
extern FILE* yyin;

void yyerror(char *s);
int yylex(void);      
int yyparse();
int count = 0;
%}

%token SELECT FROM WHERE LIKE IN BETWEEN UPDATE SET INSERT INTO VALUES DELETE
%token IDENTIFIER EOL COMMA ALL NUMBER OTHERCONDOPERATOR STRING DOTCOMMA EQUAL
%token AND OR NOT P_LEFT P_RIGHT

%left OR
%left AND
%left NOT
%left P_LEFT P_RIGHT

%%

STATEMENT:
	STATEMENT EXPRESSION EOL {printf("Expressão %d Válida \n", count+1); count++;}
	|
	;

EXPRESSION:
	SELECT_EXP FROM_EXP  DOTCOMMA
	|	SELECT_EXP FROM_EXP WHERE_EXP DOTCOMMA
	|	UPDATE_EXP SET_EXP WHERE_EXP DOTCOMMA
	|	INSERT_EXP VALUES_EXP DOTCOMMA
	|	DELETE FROM_EXP DOTCOMMA
	|	DELETE FROM_EXP WHERE_EXP DOTCOMMA
	;
	
SELECT_EXP:
	SELECT IDENTIFIER_EXP
	|	SELECT ALL
	;

IDENTIFIER_EXP:
	IDENTIFIER
	| IDENTIFIER COMMA IDENTIFIER_EXP
	;

FROM_EXP:
	FROM IDENTIFIER_EXP
	;

WHERE_EXP:
	WHERE CONDITIONS
	;

UPDATE_EXP:
	UPDATE IDENTIFIER
	;

SET_EXP:
	SET ATRIBUITION_EXP
	;

INSERT_EXP:
	INSERT INTO IDENTIFIER P_LEFT IDENTIFIER_EXP P_RIGHT
	;

VALUES_EXP:
	VALUES LIST
	;

CONDOPERATOR: 
	EQUAL
	| OTHERCONDOPERATOR
	;

CONDITIONS:
	CONDITION
	|CONDITION AND CONDITIONS
	|CONDITION OR CONDITIONS
	|NOT CONDITIONS
	|P_LEFT CONDITIONS P_RIGHT
	;

CONDITION:
	IDENTIFIER CONDOPERATOR STRING
	|	IDENTIFIER CONDOPERATOR NUMBER
	|	IDENTIFIER LIKE STRING
	|	IDENTIFIER BETWEEN IDENTIFIER AND IDENTIFIER
	|	IDENTIFIER BETWEEN NUMBER AND NUMBER
	|	IDENTIFIER IN EXPRESSION
	|	IDENTIFIER IN LIST
	;


LIST:
	P_LEFT IDENTIFIER_EXP P_RIGHT
	|	P_LEFT NUMBERS P_RIGHT
	|	P_LEFT STRINGS P_RIGHT
	| 	P_LEFT MIXED_DATA P_RIGHT
	;

NUMBERS:
	NUMBER
	| NUMBER COMMA NUMBERS
	;

STRINGS:
	STRING
	| 	STRING COMMA STRINGS
	;

MIXED_DATA:
	NUMBER COMMA IDENTIFIER_EXP
	|	NUMBER COMMA STRING
	|	IDENTIFIER COMMA NUMBER
	|	IDENTIFIER COMMA STRING
	|	STRING COMMA NUMBER
	|	STRING COMMA IDENTIFIER
	| 	IDENTIFIER COMMA MIXED_DATA
	| 	NUMBER COMMA MIXED_DATA
	|	STRING COMMA MIXED_DATA
	;

ATRIBUITION_EXP:
	IDENTIFIER EQUAL NUMBER
	| 	IDENTIFIER EQUAL IDENTIFIER
	| 	IDENTIFIER EQUAL STRING
	|	IDENTIFIER EQUAL NUMBER COMMA ATRIBUITION_EXP 
	|	IDENTIFIER EQUAL IDENTIFIER COMMA ATRIBUITION_EXP  
	| 	IDENTIFIER EQUAL STRING COMMA ATRIBUITION_EXP
	;
	
	

%%
void yyerror(char *s)
{
	printf("Error: %s\n", s);
}

int main(int argc, char *argv[])
{
	if (argc == 1)
    {
		yyparse();
    }

	if (argc == 2)
	{
    	yyin = fopen(argv[1], "r");
		yyparse();
    }

	return 0;
}
